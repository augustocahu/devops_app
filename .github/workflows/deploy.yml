name: Deploy to AWS EC2

on:
  push:
    branches: [ main, staging, development ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --passWithNoTests
    
    - name: Build application
      run: npm run build

  deploy-development:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    environment: development
    
    steps:
    - name: Deploy to Development
      run: |
        echo "ðŸš€ Deploying to Development Environment"
        echo "Branch: development"
        echo "Environment: dev.yourdomain.com"

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging
    
    steps:
    - name: Deploy to Staging
      run: |
        echo "ðŸš€ Deploying to Staging Environment"
        echo "Branch: staging"
        echo "Environment: staging.yourdomain.com"

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/devops_demo_app
          git pull origin main
          docker-compose down
          docker-compose up -d --build
          echo "âœ… Production deployment completed!"
